{"version":3,"file":"static/js/940.27730f9c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contacts/ContactList.jsx","components/filter/Filter.jsx","components/form/ContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { Box } from '@chakra-ui/react';\nimport { Button, List, ListItem, ListIcon } from '@chakra-ui/react';\nimport { MdSettings } from 'react-icons/md';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = contact => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <Box\n      maxW=\"400px\"\n      mt={1}\n      bgGradient={[\n        'linear(to-tr, #F5F5F5, #ECECEC)',\n        'linear(to-t, #ECECEC, #DCDCDC)',\n        'linear(to-b, #DCDCDC, #F0F0F0)',\n      ]}\n      height=\"auto\"\n      borderRadius=\"5px\"\n      boxShadow=\"dark-lg\"\n      p=\"6\"\n      rounded=\"md\"\n    >\n      <List>\n        {visibilityContacts.map(contact => (\n          <ListItem key={contact.id}>\n            <ListIcon as={MdSettings} color=\"green.500\" />\n            {contact.name}: <span>{contact.number}</span>\n            <Button\n              colorScheme=\"teal\"\n              variant=\"ghost\"\n              onClick={() => handleDelete(contact)}\n            >\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\nimport { Box } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { ContactList } from 'components/contacts/ContactList';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = evt => {\n    dispatch(setFilterContacts(evt.target.value));\n  };\n\n  return (\n    <Box\n      maxW=\"600px\"\n      mx=\"auto\"\n      mt={1}\n      bgGradient={[\n        'linear(to-tr, #FFFFFF, #E0E0E0)',\n        'linear(to-t, #E0E0E0, #D3D3D3)',\n        'linear(to-b, #D3D3D3, #F2F2F2)',\n      ]}\n      height=\"auto\"\n      borderRadius=\"5px\"\n      boxShadow=\"dark-lg\"\n      p=\"6\"\n      rounded=\"md\"\n    >\n      <label>\n        Find contact by the name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={handlerFilter}\n          placeholder=\"Search Contact\"\n        />\n      </label>\n      <ContactList />\n    </Box>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Box } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Box\n      maxW=\"600px\"\n      mx=\"auto\"\n      mt={24}\n      bgGradient={[\n        'linear(to-tr, gray.400, gray.200)',\n        'linear(to-t, gray.200, gray.100)',\n        'linear(to-b, gray.100, gray.300)',\n      ]}\n      height={300}\n      borderRadius=\"5px\"\n      boxShadow=\"dark-lg\"\n      p=\"6\"\n      rounded=\"md\"\n    >\n      <form onSubmit={handlerSubmit}>\n        <ul>\n          <li>\n            <p>Name</p>\n\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"name\"\n              variant=\"flushed\"\n              borderBottom=\"1px solid grey\"\n            />\n          </li>\n          <li>\n            <p>Contact</p>\n\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"Phone number\"\n              variant=\"flushed\"\n              borderBottom=\"1px solid grey\"\n            />\n          </li>\n        </ul>\n\n        <Button type=\"submit\" colorScheme=\"blue\" mx=\"80px\" mt={4}>\n          Save\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Filter } from 'components/filter/Filter';\nimport ContactForm from 'components/form/ContactForm';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      display=\"flex\"\n      gridTemplateColumns=\"1fr 1fr\"\n      mt={1}\n      bgGradient={[\n        'linear(to bottom, #F8F8F8, #E8E8E8)',\n        'linear(to top, #E8E8E8, #F8F8F8)',\n      ]}\n    >\n      <ContactForm />\n\n      <Filter />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectContactsFilter","filters","filter","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","visibilityContacts","contact","name","includes","maxW","mt","bgGradient","height","borderRadius","boxShadow","p","rounded","map","as","MdSettings","color","number","colorScheme","variant","onClick","deleteContact","id","handleDelete","Filter","mx","I","type","onChange","evt","setFilterContacts","target","value","placeholder","onSubmit","preventDefault","form","find","toast","addContact","reset","pattern","title","required","borderBottom","useEffect","fetchContacts","display","gridTemplateColumns"],"sourceRoot":""}